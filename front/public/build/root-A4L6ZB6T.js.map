{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["import { json, LinksFunction, MetaFunction } from \"@remix-run/node\";\r\nimport {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n  useLoaderData,\r\n} from \"@remix-run/react\";\r\nimport {Toaster} from 'react-hot-toast';\r\nimport stylesheet from \"~/tailwind.css\";\r\nimport type { Socket } from 'socket.io-client';\r\nimport { useSocket,SocketCon text} from \"./socket\";\r\nimport type { Voice } from \"./voice-memory\";\r\nimport { VMCon text} from \"./voice-memory\";\r\nimport { useState } from \"react\";\r\ndeclare global{\r\n  interface Window{\r\n    ENV:{\r\n      SERVER_IP:string;\r\n      SERVER_PORT:string;\r\n    }\r\n  }\r\n}\r\nexport const links: LinksFunction = () => [\r\n  { rel: \"stylesheet\", href: stylesheet },\r\n];\r\nexport const meta: MetaFunction = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"New Remix App\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n});\r\n\r\nexport async function loader(){\r\n  return json({\r\n    ENV:{\r\n      SERVER_PORT:process.env.SERVER_PORT,\r\n      SERVER_IP:process.env.SERVER_IP,\r\n    }\r\n  })\r\n}\r\n\r\nexport default function App() {\r\n  const data = useLoaderData<typeof loader>();\r\n\r\n  const socket:Socket|undefined = useSocket();\r\n  const [voices,setVoices] = useState<Voice[]>([]);\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <SocketContext.Provider value={socket}>\r\n          <VMContext.Provider value={{voices,setVoices}}>\r\n            <Outlet />\r\n            <Toaster/>\r\n          </VMContext.Provider>\r\n        </SocketContext.Provider>\r\n        <ScrollRestoration />\r\n        <script\r\n          dangerouslySetInnerHTML={{\r\n            __html: `window.ENV = ${JSON.stringify(\r\n              data.ENV\r\n            )}`,\r\n          }}\r\n        />\r\n        <Scripts />\r\n        <LiveReload port={8002}/>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAAA,gBAAyB;AAmCjB;AA1BD,IAAM,QAAuB,MAAM;AAAA,EACxC,EAAE,KAAK,cAAc,MAAM,iBAAW;AACxC;AACO,IAAM,OAAqB,OAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AACZ;AAWe,SAAR,MAAuB;AAC5B,QAAM,OAAO,cAA6B;AAE1C,QAAM,SAA0B,UAAU;AAC1C,QAAM,CAAC,QAAO,SAAS,QAAI,wBAAkB,CAAC,CAAC;AAC/C,SACE,mDAAC,UAAK,MAAK,MACT;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,UACC;AAAA,yDAAC,cAAc,UAAd,EAAuB,OAAO,QAC7B,6DAAC,UAAU,UAAV,EAAmB,OAAO,EAAC,QAAO,UAAS,GAC1C;AAAA,2DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,QACR,mDAAC,QAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,WAFV;AAAA;AAAA;AAAA;AAAA,aAGA,KAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB;AAAA,QAAC;AAAA;AAAA,UACC,yBAAyB;AAAA,YACvB,QAAQ,gBAAgB,KAAK;AAAA,cAC3B,KAAK;AAAA,YACP;AAAA,UACF;AAAA;AAAA,QALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA;AAAA,MACA,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,cAAW,MAAM,QAAlB;AAAA;AAAA;AAAA;AAAA,aAAuB;AAAA,SAhBzB;AAAA;AAAA;AAAA;AAAA,WAiBA;AAAA,OAtBF;AAAA;AAAA;AAAA;AAAA,SAuBA;AAEJ;",
  "names": ["import_react"]
}
